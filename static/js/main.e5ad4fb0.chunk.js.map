{"version":3,"sources":["contexts/MemosContext.js","components/MemosProvider/MemosProvider.js","actions/actionTypes.js","components/Loader/Loader.js","actions/actionCreators.js","components/Memo/Memo.js","MemoTotalSum/MemoTotalSum.js","components/MemosList/MemosList.js","components/MemoEditForm/MemoEditForm.js","App.js","serviceWorker.js","index.js","components/Loader/loader.gif"],"names":["MemosContext","createContext","initialState","memos","items","loading","error","removedMemo","id","editedMemo","item","type","price","descriptio","totalprice","memoExpended","memosReducer","prevMemos","action","payload","memoRemoveReducer","prevMemo","memoEditReducer","name","value","discription","reducer","prevState","map","m","open","MemosProvider","props","useReducer","state","dispatch","Provider","children","Loader","className","src","loader","alt","width","apiUrl","getMemos","a","fetchMemosRequest","fetch","response","ok","Error","json","fetchMemosSuccess","fetchMemosFailure","removeMemoById","removeMemoRequest","method","removeMemoSuccess","removeMemoFailure","editMemo","editMemoRequest","headers","body","JSON","stringify","editMemoSuccess","editMemoFailure","Memo","useContext","handleEdit","evt","preventDefault","editMemoExisting","handleRemove","handleProcess","handleCancel","onClick","description","href","MemoTotalSum","reduce","acc","curr","parseInt","MemosList","handleRetry","useEffect","errorEl","o","key","MemoEditForm","handleSubmit","handleChange","target","console","log","editMemoChangeField","onSubmit","onReset","onChange","App","styles","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.e5ad4fb0.chunk.js","sourcesContent":["import {createContext} from 'react';\n\nconst MemosContext = createContext();\n\nexport default MemosContext;    ","import React, { useReducer } from 'react'\nimport MemosContext from '../../contexts/MemosContext';\nimport { FETCH_MEMOS_REQUEST, FETCH_MEMOS_SUCCESS, FETCH_MEMOS_FAILURE, REMOVE_MEMO_CONFIRM, REMOVE_MEMO_CANCEL, REMOVE_MEMO_REQUEST, REMOVE_MEMO_SUCCESS, REMOVE_MEMO_FAILURE, EDIT_MEMO_FIELD_CHANGE, EDIT_MEMO_REQUEST, EDIT_MEMO_SUCCESS, EDIT_MEMO_FAILURE, EDIT_MEMO_CANCEL, EDIT_MEMO_EXISTING, DESCRIPTION_MEMO_GET } from '../../actions/actionTypes';\n\nconst initialState = {\n    memos: {\n        items: [],\n        loading: false,\n        error: null,\n    },\n    removedMemo: {\n        id: 0, // ничего пока не находится в подтверждении на удаление\n        loading: false,\n        error: null,\n    },\n    editedMemo: {\n        item: {\n            id: 0,\n            type: 'car',\n            price: 0,\n            descriptio:'',\n            totalprice:0,\n        },\n        loading: false,\n        error: null,\n    },\n    memoExpended:{\n        item:{},\n        id:0,\n        loading: false,\n        error: null,\n    },\n    \n};\n\nfunction memosReducer(prevMemos, action) {\n    switch (action.type) {\n        case FETCH_MEMOS_REQUEST:\n            return { ...prevMemos, loading: true, error: null };\n        case FETCH_MEMOS_SUCCESS:\n            return { items: action.payload.items, loading: false, error: null };\n        case FETCH_MEMOS_FAILURE:\n            return { ...prevMemos, loading: false, error: action.payload.error };\n        default:\n            return prevMemos;\n    }\n}\n\n// pure function\nfunction memoRemoveReducer(prevMemo, action) {\n    switch (action.type) {\n        case REMOVE_MEMO_CONFIRM:\n            return { id: action.payload.id, loading: false, error: null };\n        case REMOVE_MEMO_CANCEL:\n            return { id: 0, loading: false, error: null };\n        case REMOVE_MEMO_REQUEST:\n            return { ...prevMemo, loading: true, error: null };\n        case REMOVE_MEMO_SUCCESS:\n            // нет, в reducer'ах не должно быть никаких внешних взаимодействий\n            return { id: 0, loading: false, error: null };\n        case REMOVE_MEMO_FAILURE:\n            return { ...prevMemo, loading: false, error: action.payload.error };\n        default:\n            return prevMemo;\n    }\n}\n\nfunction memoEditReducer(prevMemo, action) {\n    switch (action.type) {\n        case EDIT_MEMO_FIELD_CHANGE:\n            // [action.payload.name] = action.payload.value\n            // action.payload.name = type, action.payload.value = 'image', то:\n            // type: value\n            return { ...prevMemo, item: { ...prevMemo.item, [action.payload.name]: action.payload.value } };\n        case EDIT_MEMO_EXISTING:\n            return { item: { ...action.payload.item }, loading: false, error: null };\n        case EDIT_MEMO_CANCEL:\n            return { item: { id: 0, type: '', totalprice:0,  price: 0, discription:''}, loading: false, error: null };\n        case EDIT_MEMO_REQUEST:\n            return { ...prevMemo, loading: true, error: null };\n        case EDIT_MEMO_SUCCESS:\n            // нет, в reducer'ах не должно быть никаких внешних взаимодействий\n            return { item: { id: 0, type: '',totalprice:0,price: 0, discription:''}, loading: false, error: null };\n        case EDIT_MEMO_FAILURE:\n            return { ...prevMemo, loading: false, error: action.payload.error };\n        default:\n            return prevMemo;\n    }\n}\n\n// pure function (чистая функция): input -> f -> output (никуда снаружи не лазит)\nfunction reducer(prevState, action) {\n    switch (action.type) {\n        case FETCH_MEMOS_REQUEST:\n        case FETCH_MEMOS_SUCCESS:\n        case FETCH_MEMOS_FAILURE:\n            return { ...prevState, memos: memosReducer(prevState.memos, action) };\n        case REMOVE_MEMO_CONFIRM:\n        case REMOVE_MEMO_CANCEL:\n        case REMOVE_MEMO_REQUEST:\n        case REMOVE_MEMO_SUCCESS:\n        case REMOVE_MEMO_FAILURE:\n            return { ...prevState, removedMemo: memoRemoveReducer(prevState.removedMemo, action) };\n        case DESCRIPTION_MEMO_GET:\n            return { ...prevState, memos:{...prevState.memos, items: prevState.memos.items.map(m => m.id === action.payload.id ? {...m, open: !m.open} : {...m, open: false})}}\n        case EDIT_MEMO_FIELD_CHANGE:\n        case EDIT_MEMO_EXISTING:\n        case EDIT_MEMO_CANCEL:\n        case EDIT_MEMO_REQUEST:\n        case EDIT_MEMO_SUCCESS:\n        case EDIT_MEMO_FAILURE:\n            return { ...prevState, editedMemo: memoEditReducer(prevState.editedMemo, prevState.memoExpended, action) };\n        default:\n            return prevState;\n    }\n}\n\nexport default function MemosProvider(props) {\n    const [state, dispatch] = useReducer(reducer, initialState); // <- будет в первый раз в prevState\n    // как вариант, если вы не используете redux\n    // getMemos\n    // removeMemo\n    // saveMemo\n\n    // авторы решили, что всё будет в props: value={{state: state, dispatch: dispatch}}\n    // redux style\n    return (\n        <MemosContext.Provider value={{ state, dispatch }}>\n            {props.children} {/* отображаем вложенные компоненты */}\n        </MemosContext.Provider>\n    )\n}\n","export const FETCH_MEMOS_REQUEST    = 'FETCH_MEMOS_REQUEST';\nexport const FETCH_MEMOS_SUCCESS    = 'FETCH_MEMOS_SUCCESS';\nexport const FETCH_MEMOS_FAILURE    = 'FETCH_MEMOS_FAILURE';\n\nexport const REMOVE_MEMO_CONFIRM    = 'REMOVE_MEMO_CONFIRM';\nexport const REMOVE_MEMO_CANCEL     = 'REMOVE_MEMO_CANCEL';\nexport const REMOVE_MEMO_REQUEST    = 'REMOVE_MEMO_REQUEST';\nexport const REMOVE_MEMO_SUCCESS    = 'REMOVE_MEMO_SUCCESS';\nexport const REMOVE_MEMO_FAILURE    = 'REMOVE_MEMO_FAILURE';\n\nexport const EDIT_MEMO_FIELD_CHANGE = 'EDIT_MEMO_FIELD_CHANGE';\nexport const EDIT_MEMO_EXISTING     = 'EDIT_MEMO_EXISTING';\nexport const EDIT_MEMO_CANCEL       = 'EDIT_MEMO_CANCEL';\nexport const EDIT_MEMO_REQUEST      = 'EDIT_MEMO_REQUEST';\nexport const EDIT_MEMO_SUCCESS      = 'EDIT_MEMO_SUCCESS';\nexport const EDIT_MEMO_FAILURE      = 'EDIT_MEMO_FAILURE';\n\nexport const DESCRIPTION_MEMO_GET = 'DESCRIPTION_MEMO_GET';","import React from 'react'\nimport loader from './loader.gif'\n\nexport default function Loader() { \n    return (\n        <div className=\"container\">\n        <img src={loader} alt=\"\" width=\"150\"/>\n    </div>\n    )\n}\n","import { FETCH_MEMOS_REQUEST, FETCH_MEMOS_SUCCESS, FETCH_MEMOS_FAILURE, REMOVE_MEMO_CONFIRM, REMOVE_MEMO_CANCEL, REMOVE_MEMO_REQUEST, REMOVE_MEMO_SUCCESS, REMOVE_MEMO_FAILURE, EDIT_MEMO_FIELD_CHANGE, EDIT_MEMO_REQUEST, EDIT_MEMO_SUCCESS, EDIT_MEMO_FAILURE, EDIT_MEMO_CANCEL, EDIT_MEMO_EXISTING, DESCRIPTION_MEMO_GET } from \"./actionTypes\";\nconst apiUrl = 'https://islomzoda-back-end-app.herokuapp.com/api/memos/'\n// не совсем правильный action creator\nexport async function getMemos(dispatch) {\n    dispatch(fetchMemosRequest());\n    try {\n        const response = await fetch(apiUrl);\n        if (!response.ok) {\n            throw new Error();\n        }\n        const memos = await response.json();\n        dispatch(fetchMemosSuccess(memos));\n    } catch (e) {\n        dispatch(fetchMemosFailure(e));\n        throw e; // перевыкидываем ту же самую ошибку\n    }\n}\n\n// нужны для удобного создания action'ов\nexport function fetchMemosRequest() {\n    return {\n        type: FETCH_MEMOS_REQUEST, // обязательно должен быть type\n        payload: {}, // не обязательно\n    };\n}\n\nexport function fetchMemosSuccess(items) {\n    return {\n        type: FETCH_MEMOS_SUCCESS, // обязательно должен быть type\n        payload: {\n            items\n        },\n    };\n}\n\nexport function fetchMemosFailure(error) {\n    return {\n        type: FETCH_MEMOS_FAILURE, // обязательно должен быть type\n        payload: {\n            error\n        },\n    };\n}\n\nexport async function removeMemoById(dispatch, id) {\n    dispatch(removeMemoRequest());\n    try {\n        const response = await fetch(`${apiUrl}${id}`, {\n            method: 'DELETE'\n        });\n        if (!response.ok) {\n            throw new Error();\n        }\n        dispatch(removeMemoSuccess());\n    } catch (e) {\n        dispatch(removeMemoFailure(e));\n        throw e; // перевыкидываем ту же самую ошибку\n    }\n    // return Promise.resolve(undefined)\n}\n\nexport async function showMemoDescriptionById(id){\n    return {\n        category: DESCRIPTION_MEMO_GET,\n        payload: {\n            id\n        }\n    }\n}\nexport function getMemoDescription(id){\n    return{\n        type: DESCRIPTION_MEMO_GET,\n        payload:{id},\n    }\n}\n\nexport function removeMemoConfirm(id) {\n    return {\n        type: REMOVE_MEMO_CONFIRM,\n        payload: { id },\n    };\n}\n\nexport function removeMemoCancel() {\n    return {\n        type: REMOVE_MEMO_CANCEL,\n        payload: {},\n    };\n}\n\nexport function removeMemoRequest() {\n    return {\n        type: REMOVE_MEMO_REQUEST, // обязательно должен быть type\n        payload: {}, // не обязательно\n    };\n}\n\nexport function removeMemoSuccess() {\n    return {\n        type: REMOVE_MEMO_SUCCESS, // обязательно должен быть type\n        payload: {},\n    };\n}\n\nexport function removeMemoFailure(error) {\n    return {\n        type: REMOVE_MEMO_FAILURE, // обязательно должен быть type\n        payload: {\n            error\n        },\n    };\n}\n\nexport function editMemoChangeField(name, value) {\n    return {\n        type: EDIT_MEMO_FIELD_CHANGE,\n        payload: {\n            name, value,\n        }\n    };\n}\n\nexport function editMemoExisting(item) {\n    return {\n        type: EDIT_MEMO_EXISTING,\n        payload: {\n            item\n        }\n    };\n}\n\nexport function editMemoCancel() {\n    return {\n        type: EDIT_MEMO_CANCEL,\n        payload: {},\n    };\n}\n\nexport async function editMemo(dispatch, item) {\n    dispatch(editMemoRequest());\n    try {\n        // TODO: будем изучать axios -> axios.post(url, body) -> headers, JSON.stringify()\n        const response = await fetch(`${apiUrl}`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(item),\n        });\n        if (!response.ok) {\n            throw new Error();\n        }\n        dispatch(editMemoSuccess());\n    } catch (e) {\n        dispatch(editMemoFailure(e));\n        throw e; // перевыкидываем ту же самую ошибку\n    }\n}\n\nexport function editMemoRequest() {\n    return {\n        type: EDIT_MEMO_REQUEST, // обязательно должен быть type\n        payload: {}, // не обязательно\n    };\n}\n\nexport function editMemoSuccess() {\n    return {\n        type: EDIT_MEMO_SUCCESS, // обязательно должен быть type\n        payload: {},\n    };\n}\n\nexport function editMemoFailure(error) {\n    return {\n        type: EDIT_MEMO_FAILURE, // обязательно должен быть type\n        payload: {\n            error\n        },\n    };\n}","import React, { useContext } from 'react'\nimport MemosContext from '../../contexts/MemosContext';\nimport { removeMemoConfirm, removeMemoCancel, removeMemoById, getMemos, editMemoExisting, getMemoDescription } from '../../actions/actionCreators';\nimport Loader from '../Loader/Loader';\n\n// item = props.item\nexport default function Memo({ item }) {\n    // Можно передавать только id, а объект по id искать в state\n    const { state: { removedMemo }, dispatch } = useContext(MemosContext);\n\n\n\n     \n\n    const handleEdit = evt => {\n        evt.preventDefault();\n        dispatch(editMemoExisting(item));\n    };\n    const handleRemove = evt => {\n        evt.preventDefault();\n        dispatch(removeMemoConfirm(item.id));\n    };\n    // можно прямо в обработчик положить async функцию*\n    // ВАМ НУЖНО ПРИДЕРЖИВАТЬСЯ ОДНОГО СТИЛЯ!!!\n    const handleProcess = async evt => {\n        evt.preventDefault();\n        try {\n            await removeMemoById(dispatch, item.id);\n            await getMemos(dispatch);\n        } catch (e) {\n            // TODO: log error\n        }\n    };\n    const handleCancel = evt => {\n        evt.preventDefault();\n        dispatch(removeMemoCancel());\n    };\n    const getFooter = () => {\n        if (removedMemo.id !== item.id) {\n            return (\n                <div>\n                    <span  className=\"ml-2\" onClick={handleEdit}>Редактировать</span>\n                    <span  className=\"ml-2\" onClick={handleRemove}>Удалить</span>\n                </div>\n            );\n        }\n        if (removedMemo.loading) {\n            return <Loader />;\n        }\n        if (removedMemo.error) { // !null -> truthy\n            return (\n                <div>\n                    Произошла ошибка. Повторить?\n                    <span onClick={handleProcess}>Да</span>\n                    <span onClick={handleCancel}>Нет</span>\n                </div>\n            );\n        }\n        return (\n            <div>\n                Вы уверены, что хотите удалить элемент?\n                <span onClick={handleProcess}>Да</span>\n                <span href=\"\" onClick={handleCancel}>Нет</span>\n            </div>\n        );\n    };\n        \n    // proto:host:port/path?query#fragment - используйте preventDefault, а не #\n    return (\n        <article className=\"container mt-3\">\n        \n            {  <div  className=\"accordion\">\n                <div className=\"card\">\n                   <h2 className=\"mb-2\">\n                <button className=\"btn btn-link\" onClick={() => dispatch(getMemoDescription(item.id))} type=\"button\" >\n          Цена:  {item.price} $, Категория:{item.type} </button>\n    </h2> <div >\n              <div className=\"container\"><div className=\"mb-2 bg-light text-dark\"> { item.open && <span> {item.description }</span>}</div>  \n              </div> </div> </div>\n    \n           </div>  }\n           \n            {getFooter()}\n        \n        </article>\n    )\n}\n","import React from 'react'\n\nexport default function MemoTotalSum({items}) {\n    return (\n        <div>\n            Итог: {items.reduce((acc, curr) => acc + parseInt(curr.price, 10), 0)}\n        </div>\n    )\n}\n","import React, { useContext, useEffect } from 'react';\nimport MemosContext from '../../contexts/MemosContext';\nimport Loader from '../Loader/Loader';\nimport Memo from '../Memo/Memo';\nimport { getMemos } from '../../actions/actionCreators';\nimport MemoTotalSum from '../../MemoTotalSum/MemoTotalSum';\n\n// иногда пишут так (зависит от стиля кода): const MemosList = () => {};\nexport default function MemosList() {\n    const { state, dispatch } = useContext(MemosContext);\n    // const memos = state.memos;\n    // const items = memos.items;\n    // const loading = memos.loading;\n    // const error = memos.error;\n    const { memos: { items, loading, error } } = state; // deep destructuring\n\n    const handleRetry = async () => {\n        try {\n            await getMemos(dispatch);\n        } catch (e) {\n            // TODO: log error\n        }\n    };\n\n    // effect's - побочные действия\n    // это любые операции с внешним миром -> ajax\n    useEffect(() => {\n        (async () => {\n            try {\n                await getMemos(dispatch);\n            } catch (e) {\n                // TODO: log error\n            }\n        })();\n    }, [dispatch]);\n   \n\n    const errorEl = (\n        <div className=\"container mt-3\">\n            <p>Произошла ошибка</p>\n            <button className=\"btn btn-outline-success\" onClick={handleRetry}>Попробовать ещё раз</button>\n        </div>\n    );\n\n    return (\n        <div>\n            {loading && <Loader />}\n            {items.map(o => <Memo key={o.id} item={o} />)}\n            {error && errorEl}\n            <MemoTotalSum items={items} />\n        </div>\n    )\n}\n","import React, { useContext } from 'react'\nimport MemosContext from '../../contexts/MemosContext'\nimport { editMemoChangeField, editMemo, getMemos, editMemoCancel } from '../../actions/actionCreators';\nimport Loader from '../Loader/Loader';\n\nexport default function MemoEditForm() {\n    const { state: { editedMemo }, dispatch } = useContext(MemosContext);\n\neditedMemo.item.totalprice +=  parseInt(editedMemo.item.price, 10)\n\n    const handleSubmit = async evt => {\n        evt.preventDefault();\n        try {\n            await editMemo(dispatch, editedMemo.item);\n            await getMemos(dispatch);\n        } catch (e) {\n            // TODO: log error\n        }\n    };\n    const handleCancel = () => {\n        dispatch(editMemoCancel());\n    };\n    const handleChange = evt => {\n        const { target: { name, value } } = evt;\n        console.log(name, value);\n        dispatch(editMemoChangeField(name, value));\n    }\n\n    const getFooter = () => {\n        if (editedMemo.loading) {\n            return <Loader />;\n        }\n        if (editedMemo.error) {\n            return (\n                <>\n                    <span>Произошла ошибка</span>\n                    <button className=\"btn btn-outline-info mt-3 ml-3\">Повторить</button>\n                    <button className=\"btn btn-outline-warning mt-3 ml-3\" type=\"reset\">Отменить</button>\n                </>\n            )\n        }\n        return (\n            <>\n                <button className=\"btn btn-outline-success mt-3\">{editedMemo.item.id === 0 ? 'Добавить' : 'Сохранить'}</button>\n                <button className=\"btn btn-outline-warning mt-3 ml-3\" type=\"reset\">Отменить</button>\n            </>\n        )\n    };\n\n    return (\n     <div className=\"container mt-5\">   <form onSubmit={handleSubmit} onReset={handleCancel}>\n            <select className=\"form-control\" name=\"type\" onChange={handleChange} value={editedMemo.item.type}>\n                <option value=\"food\">Еда</option>\n                <option value=\"travel\">Путешествия</option>\n                <option value=\"car\">Машина</option>\n                <option value=\"study\">Учеба</option>\n            </select>\n            <input className=\"form-control mt-3\" name=\"price\" type=\"number\" onChange={handleChange} value={editedMemo.item.price} />\n            <textarea className=\"form-control mt-3\" name=\"description\" onChange={handleChange} value={editedMemo.item.description}></textarea>\n            {getFooter()}\n        </form>\n        <div> {editedMemo.item.totalprice} </div>\n        </div>\n        \n    )\n}\n","import React from 'react';\nimport styles from './App.module.css'; // import styles для CSS Modules\nimport MemosProvider from './components/MemosProvider/MemosProvider';\nimport MemosList from './components/MemosList/MemosList';\nimport MemoEditForm from './components/MemoEditForm/MemoEditForm';\n\n\nfunction App() {\n  \n  return (\n    <div className={styles.App}>\n      <MemosProvider>\n        <MemoEditForm />\n        <MemosList />\n      </MemosProvider>\n    \n \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/loader.91931453.gif\";"],"sourceRoot":""}